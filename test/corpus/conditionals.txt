===============================================================================
Conditionals (%ifarch)
===============================================================================

%ifarch s390x
BuildRequires:  foo
%endif

-------------------------------------------------------------------------------

(spec
  (ifarch_statement
    (arch
      (identifier))
    (preamble
      (tags
        (dependency_tag)
        (word)))))

===============================================================================
Conditionals (%ifos)
===============================================================================

%ifos linux
BuildRequires:  foo
%endif

-------------------------------------------------------------------------------

(spec
  (ifos_statement
    (os
      (identifier))
    (preamble
      (tags
        (dependency_tag)
        (word)))))

===============================================================================
Conditionals (%ifnarch)
===============================================================================

%ifnarch x86_64
BuildRequires:  magic
%endif

-------------------------------------------------------------------------------

(spec
  (ifarch_statement
    (arch
      (identifier))
    (preamble
      (tags
        (dependency_tag)
        (word)))))

===============================================================================
Conditionals (%if with simple macros)
===============================================================================

%if %{defined with_foo}
BuildRequires:  foo
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (defined_operator
      (identifier))
    (preamble
      (tags
        (dependency_tag)
        (word)))))

===============================================================================
Conditionals (%if with complex macros)
===============================================================================

%if %{defined with_foo} && %{undefined with_bar}
BuildRequires:  foo
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (boolean_operator
      (defined_operator
        (identifier))
      (defined_operator
        (identifier)))
    (preamble
      (tags
        (dependency_tag)
        (word)))))

===============================================================================
Conditionals (%if with string comparison)
===============================================================================

%if "%{optimize_flags}" != "none"
BuildRequires:  foo
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (comparison_operator
      (quoted_string
        (macro_expansion
          (identifier)))
      (quoted_string
        (quoted_string_content)))
    (preamble
      (tags
        (dependency_tag)
        (word)))))

===============================================================================
Conditionals (%if with mathematical comparison)
===============================================================================

%if 0%{?fedora} > 10 || 0%{?rhel} > 7
BuildRequires:  foo
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (boolean_operator
      (comparison_operator
        (macro_integer_expansion
          (integer)
          (macro_expansion
            (identifier)))
        (integer))
      (comparison_operator
        (macro_integer_expansion
          (integer)
          (macro_expansion
            (identifier)))
        (integer)))
    (preamble
      (tags
        (dependency_tag)
        (word)))))

===============================================================================
Conditionals (%if with expansion)
===============================================================================

%if 0%{?fedora}
BuildRequires:  foo
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (macro_integer_expansion
      (integer)
      (macro_expansion
        (identifier)))
    (preamble
      (tags
        (dependency_tag)
        (word)))))

===============================================================================
Conditionals (%if with paranthesis)
===============================================================================

%if (0%{?fedora} || 0%{?rhel} > 7)
BuildRequires:  foo
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (parenthesized_expression
      (boolean_operator
        (macro_integer_expansion
          (integer)
          (macro_expansion
            (identifier)))
        (comparison_operator
          (macro_integer_expansion
            (integer)
            (macro_expansion
              (identifier)))
          (integer))))
    (preamble
      (tags
        (dependency_tag)
        (word)))))

===============================================================================
Conditionals (%if with %else)
===============================================================================

%if 0%{?fedora}
BuildRequires:  foo
%else
BuildRequires:  bar
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (macro_integer_expansion
      (integer)
      (macro_expansion
        (identifier)))
    (preamble
      (tags
        (dependency_tag)
        (word)))
    (else_clause
      (preamble
        (tags
          (dependency_tag)
          (word))))))

===============================================================================
Conditionals (%if with %elif)
===============================================================================

%if 0%{?fedora}
BuildRequires:  foo
%elif 0%{?rhel}
BuildRequires:  bar
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (macro_integer_expansion
      (integer)
      (macro_expansion
        (identifier)))
    (preamble
      (tags
        (dependency_tag)
        (word)))
    (elif_clause
      (macro_integer_expansion
        (integer)
        (macro_expansion
          (identifier)))
      (preamble
        (tags
          (dependency_tag)
          (word))))))

===============================================================================
Conditionals (%if with %elif and %else)
===============================================================================

%if 0%{?fedora}
BuildRequires:  foo
%elif 0%{?rhel}
BuildRequires:  bar
%else
BuildRequires:  wurst
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (macro_integer_expansion
      (integer)
      (macro_expansion
        (identifier)))
    (preamble
      (tags
        (dependency_tag)
        (word)))
    (elif_clause
      (macro_integer_expansion
        (integer)
        (macro_expansion
          (identifier)))
      (preamble
        (tags
          (dependency_tag)
          (word))))
    (else_clause
      (preamble
        (tags
          (dependency_tag)
          (word))))))

===============================================================================
Conditionals (Nested %if with %elif and %else)
===============================================================================

%if 0%{?rhel}

%ifarch x86_64
%bcond_without ceph
%bcond_without winexe
%else
%bcond_with ceph
%bcond_with winexe
#endifarch
%endif

%else
%bcond_without ceph
%bcond_without winexe
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (macro_integer_expansion
      (integer)
      (macro_expansion
        (identifier)))
    (ifarch_statement
      (arch
        (identifier))
      (macro_invocation
        (macro_expansion
          (identifier))
        (word))
      (macro_invocation
        (macro_expansion
          (identifier))
        (word))
      (else_clause
        (macro_invocation
          (macro_expansion
            (identifier))
          (word))
        (macro_invocation
          (macro_expansion
            (identifier))
          (word)))
      (comment))
    (else_clause
      (macro_invocation
        (macro_expansion
          (identifier))
        (word))
      (macro_invocation
        (macro_expansion
          (identifier))
        (word)))))

===============================================================================
Conditionals (%if %{with ..})
===============================================================================

%if %{with libwbclient}
Requires(post): libwbclient
%endif

-------------------------------------------------------------------------------

(spec
  (if_statement
    (with_operator
      (identifier))
    (preamble
      (tags
        (dependency_tag
          (qualifier))
        (word)))))
